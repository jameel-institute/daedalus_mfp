#seedbox <- c(585000,600000,120000,130000)#centre
seedbox<-c(630000,650000,160000,180000)#northeast
seedno<-3
s <- adm.seed.sheep(farmdf, seedno, seedbox)
farmdf$g_i <- adm.apply.seed(s,farmdf)
p1 <- adm.sheep.params()
p1["beta"] <- 0.25
for (i in 1:3) farmdf[,"g_i"] <- adm.apply.gen.model(p1,farmdf,distmatrix=dm)
adm.plot.gen(farmdf)
table(farmdf$g_i)
farmdf$g_i <- -1
#seedbox <- c(585000,600000,120000,130000)#centre
seedbox<-c(630000,650000,160000,180000)#northeast
seedno<-3
s <- adm.seed.sheep(farmdf, seedno, seedbox)
farmdf$g_i <- adm.apply.seed(s,farmdf)
p1 <- adm.sheep.params()
p1["beta"] <- 0.25
for (i in 1:3) farmdf[,"g_i"] <- adm.apply.gen.model(p1,farmdf,distmatrix=dm)
adm.plot.gen(farmdf)
table(farmdf$g_i)
farmdf$g_i <- -1
seedbox <- c(585000,600000,120000,130000)#centre
#seedbox<-c(630000,650000,160000,180000)#northeast
seedno<-3
s <- adm.seed.sheep(farmdf, seedno, seedbox)
farmdf$g_i <- adm.apply.seed(s,farmdf)
p1 <- adm.sheep.params()
p1["beta"] <- 0.25
for (i in 1:3) farmdf[,"g_i"] <- adm.apply.gen.model(p1,farmdf,distmatrix=dm)
adm.plot.gen(farmdf)
table(farmdf$g_i)
farmdf$g_i <- -1
seedbox <- c(585000,600000,120000,130000)#centre
#seedbox<-c(630000,650000,160000,180000)#northeast
seedno<-3
s <- adm.seed.sheep(farmdf, seedno, seedbox)
farmdf$g_i <- adm.apply.seed(s,farmdf)
p1 <- adm.sheep.params()
p1["beta"] <- 0.25
for (i in 1:3) farmdf[,"g_i"] <- adm.apply.gen.model(p1,farmdf,distmatrix=dm)
adm.plot.gen(farmdf)
table(farmdf$g_i)
farmdf$g_i <- -1
seedbox <- c(585000,600000,120000,130000)#centre
#seedbox<-c(630000,650000,160000,180000)#northeast
seedno<-3
s <- adm.seed.sheep(farmdf, seedno, seedbox)
farmdf$g_i <- adm.apply.seed(s,farmdf)
p1 <- adm.sheep.params()
p1["beta"] <- 0.25
for (i in 1:3) farmdf[,"g_i"] <- adm.apply.gen.model(p1,farmdf,distmatrix=dm)
adm.plot.gen(farmdf)
table(farmdf$g_i)
farmdf$g_i <- -1
seedbox <- c(585000,600000,120000,130000)#centre
#seedbox<-c(630000,650000,160000,180000)#northeast
seedno<-3
s <- adm.seed.sheep(farmdf, seedno, seedbox)
farmdf$g_i <- adm.apply.seed(s,farmdf)
p1 <- adm.sheep.params()
p1["beta"] <- 0.25
for (i in 1:3) farmdf[,"g_i"] <- adm.apply.gen.model(p1,farmdf,distmatrix=dm)
adm.plot.gen(farmdf)
table(farmdf$g_i)
farmdf$g_i <- -1
seedbox <- c(585000,600000,120000,130000)#centre
#seedbox<-c(630000,650000,160000,180000)#northeast
seedno<-3
s <- adm.seed.sheep(farmdf, seedno, seedbox)
farmdf$g_i <- adm.apply.seed(s,farmdf)
p1 <- adm.sheep.params()
p1["beta"] <- 0.25
for (i in 1:3) farmdf[,"g_i"] <- adm.apply.gen.model(p1,farmdf,distmatrix=dm)
adm.plot.gen(farmdf)
table(farmdf$g_i)
farmdf$g_i <- -1
seedbox <- c(585000,600000,120000,130000)#centre
#seedbox<-c(630000,650000,160000,180000)#northeast
seedno<-3
s <- adm.seed.sheep(farmdf, seedno, seedbox)
farmdf$g_i <- adm.apply.seed(s,farmdf)
p1 <- adm.sheep.params()
p1["beta"] <- 0.25
for (i in 1:3) farmdf[,"g_i"] <- adm.apply.gen.model(p1,farmdf,distmatrix=dm)
adm.plot.gen(farmdf)
table(farmdf$g_i)
farmdf$g_i <- -1
seedbox <- c(585000,600000,120000,130000)#centre
#seedbox<-c(630000,650000,160000,180000)#northeast
seedno<-3
s <- adm.seed.sheep(farmdf, seedno, seedbox)
farmdf$g_i <- adm.apply.seed(s,farmdf)
p1 <- adm.sheep.params()
p1["beta"] <- 0.25
for (i in 1:3) farmdf[,"g_i"] <- adm.apply.gen.model(p1,farmdf,distmatrix=dm)
adm.plot.gen(farmdf)
table(farmdf$g_i)
farmdf$g_i <- -1
seedbox <- c(585000,600000,120000,130000)#centre
#seedbox<-c(630000,650000,160000,180000)#northeast
seedno<-3
s <- adm.seed.sheep(farmdf, seedno, seedbox)
farmdf$g_i <- adm.apply.seed(s,farmdf)
p1 <- adm.sheep.params()
p1["beta"] <- 0.25
for (i in 1:3) farmdf[,"g_i"] <- adm.apply.gen.model(p1,farmdf,distmatrix=dm)
adm.plot.gen(farmdf)
table(farmdf$g_i)
adm.apply.gen.model
adm.offset.kernel
test <- seq(1,10,1)
test
for (i in test){print(i)}
test <- seq(1,10,0.5)
for (i in test){print(i)}
for (i in seq(0.5,9.5,1)){print(i)}
farmdf$g_i <- -1
seedbox <- c(585000,600000,120000,130000)#centre
#seedbox<-c(630000,650000,160000,180000)#northeast
seedno<-3
s <- adm.seed.sheep(farmdf, seedno, seedbox)
farmdf$g_i <- adm.apply.seed(s,farmdf)
p1 <- adm.sheep.params()
p1["beta"] <- 0.25
for (i in 1:3) farmdf[,"g_i"] <- adm.apply.gen.model(p1,farmdf,distmatrix=dm)
adm.plot.gen(farmdf)
table(farmdf$g_i)
table(farmdf$g_i)[1]
table(farmdf$g_i)["1"]
table(farmdf$g_i)["4"]
table(farmdf$g_i)[2,3]
table(farmdf$g_i)[2]
table(farmdf$g_i)[3]
tail(table(farmdf$g_i)[3],1)
class(table(farmdf$g_i)[3])
dim(table(farmdf$g_i)[3])
nrow(table(farmdf$g_i)[3])
class(table(farmdf$g_i))
table(farmdf$g_i)
table(farmdf$g_i)[2,3]
table(farmdf$g_i)[2,"1"]
table(farmdf$g_i)[1,"1"]
table(farmdf$g_i)["1"]
dim(table(farmdf$g_i))
farmdf$g_i
farmdf$g_i==1
sum(farmdf$g_i==1)
table(farmdf$g_i)
1:10
test<-numeric(3)
test
class(test)
test<-5.404040383
class(test)
farmdf$g_i <- -1
seedbox <- c(585000,600000,120000,130000)#centre
#seedbox<-c(630000,650000,160000,180000)#northeast
seedno<-3
s <- adm.seed.sheep(farmdf, seedno, seedbox)
farmdf$g_i <- adm.apply.seed(s,farmdf)
p1 <- adm.sheep.params()
beta<-seq(0.05,0.95,0.05)
I1<-numeric(length(beta))
for (b in 1:length(beta)){
p1["beta"] <- beta(b)
av<-0
for (c in 1:10){
for (i in 1:3) farmdf[,"g_i"] <- adm.apply.gen.model(p1,farmdf,distmatrix=dm)
#adm.plot.gen(farmdf)
#table(farmdf$g_i)
av<-av+sum(farmdf$g_i==1)
}
av<-av/length(c)
I1(b)<-av
}
beta
beta(1)
beta(2)
beta
bet<-beta
bet
bet(1)
class(bet)
beta
bet
beta[1]
beta[2]
seedno<-3
seedbox <- c(585000,600000,120000,130000)#centre#seedbox<-c(630000,650000,160000,180000)#northeast
s <- adm.seed.sheep(farmdf, seedno, seedbox)
p1 <- adm.sheep.params()
beta<-seq(0.05,0.95,0.05)
I1<-numeric(length(beta))
for (b in 1:length(beta)){
p1["beta"] <- beta[b]
av<-0
for (c in 1:10){
farmdf$g_i <- -1
farmdf$g_i <- adm.apply.seed(s,farmdf)
for (i in 1:3) farmdf[,"g_i"] <- adm.apply.gen.model(p1,farmdf,distmatrix=dm)
#adm.plot.gen(farmdf)
#table(farmdf$g_i)
av<-av+sum(farmdf$g_i==1)
}
av<-av/length(c)
I1[b]<-av
}
plot(beta,I1)
seedno<-3
seedbox <- c(585000,600000,120000,130000)#centre#seedbox<-c(630000,650000,160000,180000)#northeast
s <- adm.seed.sheep(farmdf, seedno, seedbox)
p1 <- adm.sheep.params()
beta<-seq(0.05,0.95,0.10)
I1<-numeric(length(beta))
for (b in 1:length(beta)){
p1["beta"] <- beta[b]
av<-0
for (c in 1:1){
farmdf$g_i <- -1
farmdf$g_i <- adm.apply.seed(s,farmdf)
for (i in 1:1) farmdf[,"g_i"] <- adm.apply.gen.model(p1,farmdf,distmatrix=dm)
#adm.plot.gen(farmdf)
#table(farmdf$g_i)
av<-av+sum(farmdf$g_i==1)
}
av<-av/length(c)
I1[b]<-av
}
plot(beta,I1)
seedno<-3
seedbox <- c(585000,600000,120000,130000)#centre#seedbox<-c(630000,650000,160000,180000)#northeast
s <- adm.seed.sheep(farmdf, seedno, seedbox)
p1 <- adm.sheep.params()
beta<-seq(0.05,0.95,0.10)
I1<-numeric(length(beta))
for (b in 1:length(beta)){
p1["beta"] <- beta[b]
av<-0
for (c in 1:10){
farmdf$g_i <- -1
farmdf$g_i <- adm.apply.seed(s,farmdf)
for (i in 1:1) farmdf[,"g_i"] <- adm.apply.gen.model(p1,farmdf,distmatrix=dm)
#adm.plot.gen(farmdf)
#table(farmdf$g_i)
av<-av+sum(farmdf$g_i==1)
}
av<-av/length(c)
I1[b]<-av
}
plot(beta,I1)
seedno<-3
seedbox <- c(585000,600000,120000,130000)#centre#seedbox<-c(630000,650000,160000,180000)#northeast
s <- adm.seed.sheep(farmdf, seedno, seedbox)
p1 <- adm.sheep.params()
beta<-seq(0.05,0.95,0.10)
I1<-numeric(length(beta))
for (b in 1:length(beta)){
p1["beta"] <- beta[b]
av<-0
for (c in 1:10){
farmdf$g_i <- -1
farmdf$g_i <- adm.apply.seed(s,farmdf)
for (i in 1:1) farmdf[,"g_i"] <- adm.apply.gen.model(p1,farmdf,distmatrix=dm)
#adm.plot.gen(farmdf)
#table(farmdf$g_i)
av<-av+sum(farmdf$g_i==1)
}
av<-av/length(c)
I1[b]<-av
}
plot(beta,I1)
for (c in 1:10){}
c
seedno<-3
seedbox <- c(585000,600000,120000,130000)#centre#seedbox<-c(630000,650000,160000,180000)#northeast
s <- adm.seed.sheep(farmdf, seedno, seedbox)
p1 <- adm.sheep.params()
beta<-seq(0.05,0.95,0.10)
I1<-numeric(length(beta))
for (b in 1:length(beta)){
p1["beta"] <- beta[b]
av<-0
for (c in 1:){
farmdf$g_i <- -1
farmdf$g_i <- adm.apply.seed(s,farmdf)
for (i in 1:1) farmdf[,"g_i"] <- adm.apply.gen.model(p1,farmdf,distmatrix=dm)
#adm.plot.gen(farmdf)
#table(farmdf$g_i)
av<-av+sum(farmdf$g_i==1)
}
av<-av/c
I1[b]<-av
}
plot(beta,I1)
seedno<-3
seedbox <- c(585000,600000,120000,130000)#centre#seedbox<-c(630000,650000,160000,180000)#northeast
s <- adm.seed.sheep(farmdf, seedno, seedbox)
p1 <- adm.sheep.params()
beta<-seq(0.05,0.95,0.10)
I1<-numeric(length(beta))
for (b in 1:length(beta)){
p1["beta"] <- beta[b]
av<-0
for (c in 1:10){
farmdf$g_i <- -1
farmdf$g_i <- adm.apply.seed(s,farmdf)
for (i in 1:1) farmdf[,"g_i"] <- adm.apply.gen.model(p1,farmdf,distmatrix=dm)
#adm.plot.gen(farmdf)
#table(farmdf$g_i)
av<-av+sum(farmdf$g_i==1)
}
av<-av/c
I1[b]<-av
}
plot(beta,I1)
farmdf$g_i <- -1
seedno<-3
seedbox <- c(585000,600000,120000,130000)#centre#seedbox<-c(630000,650000,160000,180000)#northeast
s <- adm.seed.sheep(farmdf, seedno, seedbox)
p1 <- adm.sheep.params()
beta<-seq(0.05,0.95,0.05)
I1<-numeric(length(beta))
for (b in 1:length(beta)){
p1["beta"] <- beta[b]
av<-0
for (c in 1:20){
farmdf$g_i <- -1
farmdf$g_i <- adm.apply.seed(s,farmdf)
for (i in 1:1) farmdf[,"g_i"] <- adm.apply.gen.model(p1,farmdf,distmatrix=dm)
#adm.plot.gen(farmdf)
#table(farmdf$g_i)
av<-av+sum(farmdf$g_i==1)
}
av<-av/c
I1[b]<-av
}
plot(beta,I1)
adm.apply.gen.model()
adm.apply.gen.model
p1
adm.offset.kernel
library(learnidd)
browseVignettes()
trace("adm.apply.gen.model", edit=TRUE)
adm.apply.gen.model
trace("adm.apply.gen.model", edit=TRUE)
trace("adm.apply.gen.model", edit=TRUE)
adm.apply.gen.model()
adm.apply.gen.model
adm.apply.gen.model(p1,farmdat)
adm.apply.gen.model(p1,farmdf)
test<-adm.apply.gen.model(p1,farmdf)
test
install.packages("Rtools")
library(devtools)
library(devtools)
install.packages(c("bit", "brew", "cachem", "clipr", "commonmark", "cpp11", "crayon", "credentials", "curl", "data.table", "deSolve", "digest", "dplyr", "fastmap", "furrr", "future", "generics", "gert", "ggplot2", "gh", "gitcreds", "globals", "glue", "gtable", "hms", "htmlwidgets", "httpuv", "httr", "igraph", "listenv", "magrittr", "matrixStats", "openssl", "parallelly", "ps", "purrr", "RcppXPtrUtils", "readr", "rlang", "rprojroot", "rstudioapi", "rversions", "stringi", "sys", "testthat", "tibble", "tidyr", "tidyselect", "tzdb", "vctrs", "vroom", "whisker", "xml2", "zip"))
R.version
library(devtools)
install.packages("Rtools")
install.packages("Rtools")
install.packages("Rtools")
R.version
library(devtools)
install.packages("Rtools")
install.packages(devtools)
install.packages(Rtools)
install.packages(devtools)
install.packages(Rtools)
install.packages(devtools)
install.packages("installr")
library("installr")
install.Rtools()
install.packages(Rtools)#
has_Rtools()
install.packages("devtools")
library(devtools)
install.packages("pkgbuild") # pkgbuild is not available (for R version 3.5.0)
install.packages("devtools") # make sure you have the latest version from CRAN
library(devtools) # load package
devtools::install_github("r-lib/pkgbuild") # install updated version of pkgbuild from GitHub
rm(list=ls())
setwd("C:/Users/pd315/OneDrive - Imperial College London/RA in Health Systems Analysis/Code/Daedalus_Preparedness/VOI")
T1<-df
T2<-df
T3<-df
T      <- rbind(T1,T2,T3)
df1 <- data.frame(A = c(1, 2, 3), B = c("A", "B", "C"))
df2 <- data.frame(A = c(4, 5, 6), B = c("D", "E", "F"))
df3 <- data.frame(A = c(7, 8, 9), B = c("G", "H", "I"))
# Merge three data frames using rbind
merged <- rbind(df1, df2, df3)
merged
# suppressWarnings(suppressMessages({require(voi,quietly=T)
#   require(scales,quietly=T)
#   require(earth,quietly=T)
#   require(pracma,quietly=T)
#   require(heavy,quietly=T)}))
combos       <- list(c('av_age','av_lfx'),
c('Pwfp','Ppri','Psec','Pter',
'WFHpri','WFHsec','WFHter'),
c('comm','travelA3','schoolA2','workp'),
c('Gpri','Gsec','Gter'),
c('Tres','t_tit','trate'),
c('sdl','sdb'),
c('Hmax'),
c('t_vax','arate','puptake'))
diseases     <- list('Influenza 2009','Influenza 1957','Influenza 1918',
'Covid Omicron','Covid Wildtype','Covid Delta','SARS');
strategies   <- list('No Closures','School Closures',
'Economic Closures','Elimination');
informations <- array(0,
dim=c(length(combos),length(diseases),length(strategies)))
#pairs     <- combos
#for (i in 1:(length(combos)-1)){
#for (j in (i+1):length(combos)){
#pairs <- append(pairs,list(c(combos[[i]],combos[[j]])))
#}}
for (j in 1:length(diseases)){
for (k in 1:length(strategies)){
fname1 <- paste('LLMIC_',diseases[j],'_',strategies[k],'.csv',sep="")
T1     <- read.csv(fname1)
fname2 <- paste('UMIC_',diseases[j],'_',strategies[k],'.csv',sep="")
T2     <- read.csv(fname2)
fname3 <- paste('HIC_',diseases[j],'_',strategies[k],'.csv',sep="")
T3     <- read.csv(fname3)
T      <- rbind(T1,T2,T3)
SEC  <- T$SEC
gdp  <- 365*rowSums(T[, 331:375])
y    <- 100*SEC/gdp
#y    <- SEC
inds <- !is.nan(y)
y    <- y[inds]
y    <- data.frame(y)
x      <- T[which(inds),]
Npop   <- x[, 4:24]
bands  <- seq(from=2,to=102,by=5)
av_age <- (as.matrix(Npop)%*%bands)/rowSums(Npop)
x      <- cbind(x,av_age=av_age)
# Pret   <- rowSums(Npop[,14:21])/rowSums(Npop)
# x      <- cbind(x,Pret=Pret)
# Pwrk   <- rowSums(Npop[,5:13])/rowSums(Npop)
# x      <- cbind(x,Pwrk=Pwrk)
# Psch   <- rowSums(Npop[,2:4])/rowSums(Npop)
# x      <- cbind(x,Psch=Psch)
# Ppre   <- Npop[,1]/rowSums(Npop)
# x      <- cbind(x,Ppre=Ppre)
Npop2  <- cbind(Npop[,1:17],rowSums(Npop[,18:21]))
la     <- x[,476:493]
av_lfx <- diag(as.matrix(Npop2)%*%t(la))/rowSums(Npop)
x      <- cbind(x,av_lfx=av_lfx)
###
NNs    <- x[, 25:69]
Pwfp   <- rowSums(NNs)/rowSums(Npop)
x      <- cbind(x,Pwfp=Pwfp)
Pwfa   <- rowSums(NNs)/rowSums(Npop[,5:13])
x      <- cbind(x,Pwfa=Pwfa)
Ppri   <- rowSums(NNs[,1:5])/rowSums(NNs)
x      <- cbind(x,Ppri=Ppri)
Psec   <- rowSums(NNs[,6:25])/rowSums(NNs)
x      <- cbind(x,Psec=Psec)
Pter   <- rowSums(NNs[,26:45])/rowSums(NNs)
x      <- cbind(x,Pter=Pter)
###
wfhu   <- x[, 421:465]
WFHpri <- diag(as.matrix(NNs[,1:5])%*%t(wfhu[,1:5]))/rowSums(NNs[,1:5])
x      <- cbind(x,WFHpri=WFHpri)
WFHsec <- diag(as.matrix(NNs[,6:25])%*%t(wfhu[,6:25]))/rowSums(NNs[,6:25])
x      <- cbind(x,WFHsec=WFHsec)
WFHter <- diag(as.matrix(NNs[,26:45])%*%t(wfhu[,26:45]))/rowSums(NNs[,26:45])
x      <- cbind(x,WFHter=WFHter)
###
obj    <- x[, 331:375]
Gpri   <- rowSums(obj[,1:5])/rowSums(NNs[,1:5])
x      <- cbind(x,Gpri=Gpri)
Gsec   <- rowSums(obj[,6:25])/rowSums(NNs[,6:25])
x      <- cbind(x,Gsec=Gsec)
Gter   <- rowSums(obj[,26:45])/rowSums(NNs[,26:45])
x      <- cbind(x,Gter=Gter)
#
#
#
informations[,j,k] <- voi::evppivar(y$y,x,par=combos,verbose = F)$evppi/var(y$y)
}}
infoplot <- rbind(informations[,1,],informations[,2,],informations[,3,],
informations[,4,],informations[,5,],informations[,6,],
informations[,7,])
heatmap(infoplot,Colv=NA,Rowv=NA,scale="column")
# labels <- vector("list",length=length(combos))
# for (i in 1:length(combos)){labels[i] <- paste(combos[[i]], collapse = "")}
# plot(informations,1:length(informations),type="p",pch=16,col="blue",
#      xlim=c(0,1.2),xlab='EVPPI',ylab='P2 Measure(s)')
# text(x=informations+0.2,y=1:length(informations),
#      labels=unlist(labels),srt = 0)
infoplot
class(infoplot)
write.table(infoplot,file="infoplot.csv")
informations[,3,1]
max(infoplot)
informations[,7,4]
informations[,7,4]
infoplot[,7,]
infomations[,7,]
informations[,7,]
infoplot
informations[,7,4]
infoplot[,4]
dim(infoplot)
infoplot[,4]
informations[,7,4]
informations[,3,1]
